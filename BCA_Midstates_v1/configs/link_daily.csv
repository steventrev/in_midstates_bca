Silos,Description,Target,Expression
# link volume calculations,,,
,,_auto_volume_daily,links.AUTO + 0.000000000001
,,_med_truck_volume_daily,links.SUT + 0.000000000001
,,_heavy_truck_volume_daily,links.MUT + 0.000000000001
,,_truck_volume_daily,_med_truck_volume_daily + _heavy_truck_volume_daily
,,_total_volume_daily,_auto_volume_daily + _truck_volume_daily
,,_length,links.LENGTH
,,_waterf,links.waterf
,,_noisef,links.noisef
,,_vmt_total,_total_volume_daily * _length
,,_freeway,(links.FCLASS==1) | (links.FCLASS==2)
,,_arterial,(links.FCLASS==3) | (links.FCLASS==4)
,,_collector,(links.FCLASS==5) | (links.FCLASS==6)
,,_local,links.FCLASS==7
,,_ramp,(links.FCLASS==81) | (links.FCLASS==82)
,,_county1,links.County=='DAVIESS'
,,_county2,links.County=='DUBOIS'
,,_county3,links.County=='PERRY'
,,_county4,links.County=='PIKE'
,,_county5,links.County=='SPENCER'
,,_county6,links.County=='WARRICK'
,,_county7,links.County=='GREENE'
,,_county8,links.County=='CRAWFORD'
,,_county9,links.County=='MONROE'
,,_county10,links.County=='LAWRENCE'
,,_county11,links.County=='MARTIN'
,,_county12,links.County=='ORANGE'
,,_speed,links.SPEED
# safety costs - intersection computations at to_node,,,
,indegree of to_node,_to_indegree,links.i.groupby(links.j).transform('count')
,outdegree of to_node,_to_outdegree,"links.j.apply(lambda x, links=links: len(links[links.i==x]))"
,is to node an intersection,_is_intersection,(_to_indegree > 2) | (_to_outdegree > 2)
,num of legs at the intersection at to_node,_num_legs,"pd.concat([_to_indegree,_to_outdegree],axis=1).max(axis=1)"
,road ID,_road_ID,"links[['i','j']].min(axis=1).astype(str) + links[['i','j']].max(axis=1).astype(str)"
,total segment volume (sum of both directions),_seg_volume,_total_volume_daily.groupby(_road_ID).transform('sum')
,max leg volume from in links at to_node,_max_in_vol,_seg_volume.groupby(links.j).transform('max')
,max leg volume from out links at to_node,_max_out_vol,"links['j'].apply(lambda x, links=links, _seg_volume=_seg_volume: max( _seg_volume[links.i==x]) if (links.i==x).any() else 0.0)"
,min leg volume from in links at to_node,_min_in_vol,_seg_volume.groupby(links['j']).transform('min')
,min leg volume from out links at to_node,_min_out_vol,"links['j'].apply(lambda x, links=links, _seg_volume=_seg_volume: min( _seg_volume[links.i==x]) if (links.i==x).any() else 0.0)"
,max volume at to_node,_max_vol,"pd.concat([_max_in_vol,_max_out_vol],axis=1).max(axis=1)"
,min volume at to_node,_min_vol,"pd.concat([_min_in_vol,_min_out_vol],axis=1).min(axis=1)"
# safety costs,,,
, SPF - roadway segment,_rs_spf,np.exp(SPF_RS_A + SPF_RS_B * np.log(_total_volume_daily) + SPF_RS_Y * np.log(_length))
, SPF - intersection,_int_spf,np.exp(SPF_INT_A + SPF_INT_B * np.log(_max_vol) + SPF_INT_Y * np.log(_min_vol))
, number of RS crashes,_crashes_rs,_rs_spf * CMF_RS
, number of intersection crashes,_crashes_int,(_int_spf * CMF_INT) * _is_intersection/_to_indegree
*,total crash in DAVIESS county,tot_crash_dav,(_crashes_rs+_crashes_int)*_county1 * CALIBRATION_C1
*,total crash in DUBOIS county,tot_crash_dub,(_crashes_rs+_crashes_int)*_county2 * CALIBRATION_C2
*,total crash in PERRY county,tot_crash_per,(_crashes_rs+_crashes_int)*_county3 * CALIBRATION_C3
*,total crash in PIKE county,tot_crash_pik,(_crashes_rs+_crashes_int)*_county4 * CALIBRATION_C4
*,total crash in SPENCER county,tot_crash_spe,(_crashes_rs+_crashes_int)*_county5 * CALIBRATION_C5
*,total crash in WARRICK county,tot_crash_war,(_crashes_rs+_crashes_int)*_county6 * CALIBRATION_C6
*,total crash in GREENE county,tot_crash_grn,(_crashes_rs+_crashes_int)*_county7 * CALIBRATION_C7
*,total crash in CRAWFORD county,tot_crash_crf,(_crashes_rs+_crashes_int)*_county8 * CALIBRATION_C8
*,total crash in MONROE county,tot_crash_mnr,(_crashes_rs+_crashes_int)*_county9 * CALIBRATION_C9
*,total crash in LAWRENCE county,tot_crash_law,(_crashes_rs+_crashes_int)*_county10 * CALIBRATION_C10
*,total crash in MARTIN county,tot_crash_mrt,(_crashes_rs+_crashes_int)*_county11 * CALIBRATION_C11
*,total crash in ORANGE county,tot_crash_org,(_crashes_rs+_crashes_int)*_county12* CALIBRATION_C12
*,total PDO crash in DAVIESS county,crashes_pdo_dav,tot_crash_dav * CRASH_PDO_DAV
*,total injury crash in DAVIESS county,crashes_inj_dav,tot_crash_dav* CRASH_INJURY_DAV
*,total fatal crash in DAVIESS county,crashes_fat_dav,tot_crash_dav* CRASH_FATAL_DAV
*,total PDO crash in DUBOIS county,crashes_pdo_dub,tot_crash_dub * CRASH_PDO_DUB
*,total injury crash in DUBOIS county,crashes_inj_dub,tot_crash_dub* CRASH_INJURY_DUB
*,total fatal crash in DUBOIS county,crashes_fat_dub,tot_crash_dub* CRASH_FATAL_DUB
*,total PDO crash in PERRY county,crashes_pdo_per,tot_crash_per * CRASH_PDO_PER
*,total injury crash in PERRY county,crashes_inj_per,tot_crash_per* CRASH_INJURY_PER
*,total fatal crash in PERRY county,crashes_fat_per,tot_crash_per* CRASH_FATAL_PER
*,total PDO crash in PIKE county,crashes_pdo_pik,tot_crash_pik * CRASH_PDO_PIK
*,total injury crash in PIKE county,crashes_inj_pik,tot_crash_pik* CRASH_INJURY_PIK
*,total fatal crash in PIKE county,crashes_fat_pik,tot_crash_pik* CRASH_FATAL_PIK
*,total PDO crash in SPENCER county,crashes_pdo_spe,tot_crash_spe * CRASH_PDO_SPE
*,total injury crash in SPENCER county,crashes_inj_spe,tot_crash_spe* CRASH_INJURY_SPE
*,total fatal crash in SPENCER county,crashes_fat_spe,tot_crash_spe* CRASH_FATAL_SPE
*,total PDO crash in WARRICK county,crashes_pdo_war,tot_crash_war * CRASH_PDO_WAR
*,total injury crash in WARRICK county,crashes_inj_war,tot_crash_war* CRASH_INJURY_WAR
*,total fatal crash in WARRICK county,crashes_fat_war,tot_crash_war* CRASH_FATAL_WAR
*,total PDO crash in GREENE county,crashes_pdo_grn,tot_crash_grn * CRASH_PDO_GRN
*,total injury crash in GREENE county,crashes_inj_grn,tot_crash_grn* CRASH_INJURY_GRN
*,total fatal crash in GREENE county,crashes_fat_grn,tot_crash_grn* CRASH_FATAL_GRN
*,total PDO crash in CRAWFORD county,crashes_pdo_crf,tot_crash_crf * CRASH_PDO_CRF
*,total injury crash in CRAWFORD county,crashes_inj_crf,tot_crash_crf* CRASH_INJURY_CRF
*,total fatal crash in CRAWFORD county,crashes_fat_crf,tot_crash_crf* CRASH_FATAL_CRF
*,total PDO crash in MONROE county,crashes_pdo_mnr,tot_crash_mnr * CRASH_PDO_MNR
*,total injury crash in MONROE county,crashes_inj_mnr,tot_crash_mnr* CRASH_INJURY_MNR
*,total fatal crash in MONROE county,crashes_fat_mnr,tot_crash_mnr* CRASH_FATAL_MNR
*,total PDO crash in LAWRENCE county,crashes_pdo_law,tot_crash_law * CRASH_PDO_LAW
*,total injury crash in LAWRENCE county,crashes_inj_law,tot_crash_law* CRASH_INJURY_LAW
*,total fatal crash in LAWRENCE county,crashes_fat_law,tot_crash_law* CRASH_FATAL_LAW
*,total PDO crash in MARTIN county,crashes_pdo_mrt,tot_crash_mrt * CRASH_PDO_MRT
*,total injury crash in MARTIN county,crashes_inj_mrt,tot_crash_mrt* CRASH_INJURY_MRT
*,total fatal crash in MARTIN county,crashes_fat_mrt,tot_crash_mrt* CRASH_FATAL_MRT
*,total PDO crash in ORANGE county,crashes_pdo_org,tot_crash_org * CRASH_PDO_ORG
*,total injury crash in ORANGE county,crashes_inj_org,tot_crash_org* CRASH_INJURY_ORG
*,total fatal crash in ORANGE county,crashes_fat_org,tot_crash_org* CRASH_FATAL_ORG
*,total annual  PDO crashes,total_pdo_crashes,crashes_pdo_dav+crashes_pdo_dub+crashes_pdo_per+crashes_pdo_pik+crashes_pdo_spe+crashes_pdo_war+crashes_pdo_grn+crashes_pdo_crf+crashes_pdo_mnr+crashes_pdo_law+crashes_pdo_mrt+crashes_pdo_org
*,total annual injury crashes,total_inj_crashes,crashes_inj_dav+crashes_inj_dub+crashes_inj_per+crashes_inj_pik+crashes_inj_spe+crashes_inj_war+crashes_inj_grn+crashes_inj_crf+crashes_inj_mnr+crashes_inj_law+crashes_inj_mrt+crashes_inj_org
*,total annual fatal crashes,total_fat_crashes,crashes_fat_dav+crashes_fat_dub+crashes_fat_per+crashes_fat_pik+crashes_fat_spe+crashes_fat_war+crashes_fat_grn+crashes_fat_crf+crashes_fat_mnr+crashes_fat_law+crashes_fat_mrt+crashes_fat_org
,total crashes cost,cost_of_crashes_benefit,(total_pdo_crashes * CRASH_COST_PDO + total_inj_crashes * CRASH_COST_INJURY + total_fat_crashes * CRASH_COST_FATAL) * DISCOUNT_RATE
#surface water,,,
,water pollution cost,water_pollution_cost,_waterf * _vmt_total * WATER_POLLUTION_COST * DISCOUNT_RATE * ANNUALIZATION_FACTOR
#noise,,,
, Auto freeway noise cost,_auto_noise_cost_fwy,(_freeway | _ramp ) * _auto_volume_daily * (NOISE_COST_AUTO_FREEWAY /1000)
, Med trucks freeway noise cost,_mtrucks_noise_cost_fwy,(_freeway | _ramp )  *_med_truck_volume_daily * (NOISE_COST_MEDTRUCKS_FREEWAY/1000)
, Heavy trucks freeway noise cost,_htrucks_noise_cost_fwy,(_freeway | _ramp )  *_heavy_truck_volume_daily * (NOISE_COST_HEVTRUCKS_FREEWAY/1000)
, Auto arterial noise cost,_auto_noise_cost_art,_arterial * _auto_volume_daily * (NOISE_COST_AUTO_ARTERIAL/1000)
, Med trucks arterial noise cost,_mtrucks_noise_cost_art,_arterial *_med_truck_volume_daily * (NOISE_COST_MEDTRUCKS_ARTERIAL/1000)
, Heavy trucks arterial noise cost,_htrucks_noise_cost_art,_arterial *_heavy_truck_volume_daily * (NOISE_COST_HEVTRUCKS_ARTERIAL/1000)
, Auto collector noise cost,_auto_noise_cost_col,_collector * _auto_volume_daily * (NOISE_COST_AUTO_COLLECTOR/1000)
, Med trucks collector noise cost,_mtrucks_noise_cost_col,_collector *_med_truck_volume_daily * (NOISE_COST_MEDTRUCKS_COLLECTOR/1000)
, Heavy trucks collector noise cost,_htrucks_noise_cost_col,_collector *_heavy_truck_volume_daily * (NOISE_COST_HEVTRUCKS_COLLECTOR/1000)
, ,_freeway_noise_cost,_auto_noise_cost_fwy + _mtrucks_noise_cost_fwy + _htrucks_noise_cost_fwy
, ,_arterial_noise_cost,_auto_noise_cost_art + _mtrucks_noise_cost_art + _htrucks_noise_cost_art
, ,_collector_noise_cost,_auto_noise_cost_col + _mtrucks_noise_cost_col + _htrucks_noise_cost_col
,noise pollution cost,total_noise_cost,_noisef * (_freeway_noise_cost + _arterial_noise_cost + _collector_noise_cost) * DISCOUNT_RATE * ANNUALIZATION_FACTOR
#emissions lookup table,,,
,set lookup index on table,_EMISSIONS_TABLE,EMISSIONS.set_index(EMISSIONS['Ltype'] + '_' +  EMISSIONS['Speed'].astype(str))
,,_ltype,_freeway * 1 + _arterial * 2 + _collector * 3 + _ramp * 4
,,_ltype,"_ltype.replace(1,'Fwy')"
,,_ltype,"_ltype.replace(2,'Art')"
,,_ltype,"_ltype.replace(3,'Local')"
,,_ltype,"_ltype.replace(4,'Ramp')"
,,_emissions_key,"_ltype.astype(str) + '_' + _speed.clip(lower=3, upper=65).round().astype(int).astype(str)"
,,_co2_rate,_emissions_key.map(_EMISSIONS_TABLE['pollutantID_' + str(CO2_PTYPE)])
,,_pm25_rate,_emissions_key.map(_EMISSIONS_TABLE['pollutantID_' + str(PM25_PTYPE)])
,,_pm10_rate,_emissions_key.map(_EMISSIONS_TABLE['pollutantID_' + str(PM10_PTYPE)])
,,_nox_rate,_emissions_key.map(_EMISSIONS_TABLE['pollutantID_' + str(NOX_PTYPE)])
,,_vocs_rate,_emissions_key.map(_EMISSIONS_TABLE['pollutantID_' + str(VOCS_PTYPE)])
,co2 emissions cost,emissions_co2,_co2_rate * _vmt_total * GRAMS_TO_METRIC_TONS * CO2_COST * DISCOUNT_RATE * ANNUALIZATION_FACTOR
,pm25 emissons cost,emissions_pm25,_pm25_rate * _vmt_total * GRAMS_TO_METRIC_TONS * PM25_COST *DISCOUNT_RATE * ANNUALIZATION_FACTOR
,pm10 emissions cost,emissions_pm10,_pm10_rate * _vmt_total * GRAMS_TO_METRIC_TONS * PM10_COST * DISCOUNT_RATE * ANNUALIZATION_FACTOR
,nox emissions costs,emissions_nox,_nox_rate * _vmt_total * GRAMS_TO_METRIC_TONS * NOX_COST * DISCOUNT_RATE * ANNUALIZATION_FACTOR
,vocs emissions costs,emissions_vocs,_vocs_rate * _vmt_total * GRAMS_TO_METRIC_TONS * VOCS_COST * DISCOUNT_RATE * ANNUALIZATION_FACTOR
,total emissions cost,emissions,emissions_co2 + emissions_pm25 + emissions_pm10 + emissions_nox + emissions_vocs
#vehicle operating costs ,,,
,,_fuelconsump_rate,_emissions_key.map(_EMISSIONS_TABLE['pollutantID_' + str(FUEL_CONSUMPTION_PTYPE)])
,,auto_fuel_cost,_auto_volume_daily * _length * _fuelconsump_rate * GALLON_TO_BTU * GAS_COST
,,truck_fuel_cost,_truck_volume_daily * _length * _fuelconsump_rate * GALLON_TO_BTU * TRUCK_GAS_COST
,fuel auto operating cost,fuel_cost,(auto_fuel_cost + truck_fuel_cost) * DISCOUNT_RATE * ANNUALIZATION_FACTOR
#vehicle operating costs - non-fuel,,,
,,auto_nonfuel_cost,_auto_volume_daily * _length * CAR_COST_PER_MILE
,,truck_nonfuel_cost,_truck_volume_daily * _length * TRUCK_COST_PER_MILE
,nonfuel auto operating cost,nonfuel_cost,(auto_nonfuel_cost + truck_nonfuel_cost) * DISCOUNT_RATE * ANNUALIZATION_FACTOR
